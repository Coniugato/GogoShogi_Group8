##ここにレポートを書いていってください。

今回のAIは一言で言うとAlphaBeta法を使ったAIです。
AlphaBeta法自体は何の変哲もない普通のものです。盤面の有利不利を判定する評価関数としては主に二つの観点で評価しています。
一つは単純に強い駒を持っている方が良いと言うものです。これは単純に駒の種類によって点数をつけて盤上の全てのますを調べて点数の和を取ることで実装しました。
もう一つは自分と相手の駒がそれぞれ次に動けるますを調べて、相手の駒しかそこに行けないますに自分の駒があったら点数をマイナスにし、逆に自分の駒しかそこに行けないますに相手の駒があったら点数をプラスにすると言うものです。これはもし相手に取られそうな駒があっても次に自分がその相手の駒を撮ることが出来るなら駒交換が成立するためにまだ良いという考えに基づいています。そこに動ける駒の種類によって点数の絶対値を変えることによって「歩と銀の交換はこちらの得」「飛車と金の交換はこちらの損」というものにも対応しています。
あとは盤面に自分の王がなければ-9999999のようなこまごまとした事をやって盤面の評価関数としています。

反則手の処理が滅茶苦茶に大変ながらも、モジュール分割を頑張って読みやすいコードを目指しました。また開発用にDisplay_Boardで盤面や王手・詰みの情報を表示する機能は班員から好評をいただきました。

機械学習によるAlphaBeta法に用いる評価関数の学習も試しました。結果として機械学習を用いない盤面評価のほうが強いことが判明しました。
機械学習手法を改善していけば盤面評価の弱点を指摘したり補強したりする用途に用いることができると思われます。
ここに関連のコードを供養しておきます。
https://drive.google.com/drive/folders/1tLOQg1bHddTkIGct0kINOJos0Sdmy__7?usp=sharing
